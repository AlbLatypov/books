#!/bin/bash

#-------------------------------------------------------------
# awk ' { print } ' /etc/passwd


#-------------------------------------------------------------
# awk -F":" '{ print $1 }' /etc/passwd
# awk -F":" '{ print "user:" $1 }' /etc/passwd
# awk ' BEGIN { FS=":" } { print NR,$1 } ' /etc/passwd
# awk ' NR==8,NR==12 ' /etc/passwd
# awk ' NR < 6 ' /etc/passwd

# Вот что каждая часть этой команды делает:
#     awk: это утилита для обработки и анализа текста в Linux.

#     -F":": Этот флаг указывает awk использовать двоеточие (:) 
#      в качестве разделителя полей.

#     '{ print $1 }': Это действие, 
#      которое awk будет выполнять для каждой строки. 
#      $1 означает первое поле в строке. 
#      В контексте этой команды, это имя пользователя.

#      NR - номер строки вставляет

#     /etc/passwd: Это файл, 
#     который awk будет обрабатывать.
#---------------------------------------------------------------


# awk ' /bash$/ ' /etc/passwd

# Командой awk ' /bash$/ ' /etc/passwd мы используем 
# awk для поиска строк в файле /etc/passwd, 
# которые заканчиваются на "bash".

# Регулярное выражение bash$ проверяет, 
# заканчивается ли строка словом "bash". 
# Символ "/" в начале и конце указывает, 
# что мы ищем полное соответствие строки.

# Например, если файл /etc/passwd содержит следующую информацию:

# root:x:0:0:root:/root:/bin/bash
# daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
# bin:x:2:2:bin:/bin:/usr/sbin/nologin

# То после выполнения команды вывод будет следующим:

# root
# bin

# То есть это имена пользователей "root" и "bin", 
# потому что их командами по умолчанию являются 
# командные оболочке bash.


